+===============
| GENERAL INFO
+===============

Permissions:

*:      Equivalent to a list of every other permission

cp:     Can create a post
ep:     Can edit any post
dp:     Can delete any post

cc:     Can comment on posts
ec:     Can edit any comment
dc:     Can delete any comment

bu:     Can ban users from using the services
du:     Can delete any user account

af:     Can send a friend request
rf:     Can revoke a pending friend request
uf:     Can unfriend someone

sc:     Can change preferred colour scheme

+===========
| API INFO 
+===========
| URL parameters (e.g. /foo/bar/<baz>, where `baz` is the parameter), are
| written as just demonstrated in that example.
|
| Other parameters (e.g. /foo?bar=baz) are listed just below the description of each
| route.
+===========

POST /api/login
    Sets the users cookies to be logged in, if the credentials are valid. Arguments:

     username:  The username to log in as
     password:  The password to log in as

POST /api/user
    Creates a user with permissions "cp,cc" The following arguments must be given:

     username:      The username of the user
     email:         The email of the user
     password:      The password (non-hashed - the api hashes it)

POST /api/post
    Creates a new post. Arguments:

     api_token:     A valid api token
     body:          The text content of the post. Max 2500 characters.
     tags:          Comma seperated tags, e.g. "foo,bar,baz"

POST /api/post/<post_id>/comment
    Creates a new comment on a post.

     api_token: A valid api token 
     body:      The text body of the comment.

POST /api/friend/request/<user_id>
    For a friendship to be made, both members must call this function with the user_id
    of the other. friendship_strength defaults to 0

     api_token: A valid api token

GET /api/user/<user_id>
    Returns a user

     format:    The return format, 'json' or 'python'. Default 'json'.

GET /api/post/<post_id>
    Returns a specific post.
 
     format:    Return format, either 'json' or 'python'. Default 'json'.

GET /api/comment/<comment_id>
    Returns a specific comment.

     format:    Return format. 'json' or 'python'. Default 'json'.

GET /api/users
    Returns all users.

     format: Return format. 'json' or 'python'. Default 'json'.

GET /api/posts
    Returns all the posts. Look at the json yourself to see how it works. Argument:

     format:    The return format, either 'json' or 'python'
                If nothing is specified, or what _is_ specified isn't valid, then
                the value is defaulted to 'json'

GET /api/post/<post_id>/comments
    Returns all the comments on a specific post.

     format:    Identical meaning to format on 'GET /api/posts'. 

DELETE /api/user/<user_id>
    Deletes a user. If the deletee is not the same user as the deleter, then the deleter must have
    the permission 'du'[delete-user].

     api_token: A valid api token 

DELETE /api/post/<post_id>
    Deletes a post. If the post doesn't belong to the deleter, then the deleter must have the permission
    'dp'[delete-post].

     api_token: A valid api token 

DELETE /api/comment/<comment_id>
    Deletes a comment. If the comment doesn't belong to the delete, then the deleter must have the
    permission `du`[delete-user].

     api_token:     A valid api token

